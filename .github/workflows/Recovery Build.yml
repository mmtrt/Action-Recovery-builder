name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/PitchBlackRecoveryProject/manifest_pb'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'android-12.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/mmtrt/android_device_xiaomi_evergreen'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'pbrp-12.1'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/evergreen'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'evergreen'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'omni_evergreen'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'boot'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04
    # You can use either of the ubuntu-18.04 or ubuntu-20.04 runner
    steps:

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt-mark hold python-is-python2 python2 snapd firefox
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev  git device-tree-compiler lz4 xz-utils zlib1g-dev gcc g++ python3 python-is-python3 p7zip-full wget


    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Patch boot.img
      run: |
        wget -q "https://github.com/cfig/Android_boot_image_editor/releases/download/v13_preview3/boot_editor_v13_preview3.zip"
        wget -q "https://github.com/mmtrt/Action-Recovery-builder/releases/download/3404551841/boot.img"
        7z x boot_editor_v13_preview3.zip
        cp boot.img boot_editor_v13_preview3
        cd boot_editor_v13_preview3 ; chmod +x gradlew ; ./gradlew unpack ;
        cat build/unzip_boot/boot.json ; cp build/unzip_boot/boot.json build/unzip_boot/b.json
        cat build/unzip_boot/b.json | sed -i 's|twrpfastboot=1 ||;s/-[0-9]+\./12./;s/12.[0-9]+\./12.0./;s/12.0.[0-9]+/12.0.0/' &> build/unzip_boot/boot.json ; rm build/unzip_boot/b.json
        cat build/unzip_boot/boot.json ; ./gradlew pack ; ls -al

    # - name: Upload to Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
    #     name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
    #     tag_name: ${{ github.run_id }}
    #     body: |
    #       Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
    #       Device: ${{ github.event.inputs.DEVICE_NAME }}
    #       Target: ${{ github.event.inputs.BUILD_TARGET }}.img
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
